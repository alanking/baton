	[2.0.1]

	Bugfix: corrected cases where we simply returned the target JSON
	as an operation result. A result should always be a freshly
	created JSON struct so that the caller knows how to free it.

	Bugfix: added checks to free rods_path.rodsObjStat
	consistently. Although valgrind didn't find errors with the
	existing checks, they were not applied consistently.

	[2.0.0]

	This release includes changes to the JSON returned by baton-do
	that are not backwardly compatible.

	Ensured that all operations return a JSON document describing the
	target, even in cases where the target was deleted.

	JSON object and JSON array results now appear under distinct
	keys to allow automatic unmarshalling by Go.

	Timestamps are now formatted as RFC3339, which is the default for
	Go unmarshalling.

	Added support for iRODS 4.2, ended full support for iRODS 3.x.

	Added a --connect-time CLI option to limit connection duration.

	Added a --no-error CLI option to baton-do

	Added a remove data object operation.

	Added a create and remove collection option (with recursion).

	Added the ability to optionally create and return checksums on put.

	Added stricter checks on the incoming JSON to help identify errors.

	Switched to using Conda for baton dependencies during tests.

	Switched to using iRODS running in Docker for tests.

	Refactored the list_checksum function to avoid updating the
	checksum.

	Bugfix: Fixed bug where settings from AC_CHECK_LIBs were reset.

	Bugfix: Use json_to_collection_path for collection operations.

	Bugfix: Added missing error initialisation and missing error
	code checks.

	Bugfix: Handle paths and file names named '0' correctly in the
	Perl wrapper script.

	[1.2.0]

	Bugfix: ensure args_copy.path is defined during error handling.

	Added --wlock command line argument to baton-put and baton-do,
	enabling server-side advisory locking.

	Fixed llvm build warnings (Joshua Randall).

	Documentation updates.

	[1.1.0]

	Added --single-server CLI option to allow the user to prevent
	direct access to resource servers when uploading files.

	[1.0.1]

	Restore the --save CLI option of baton-get

	[1.0.0]

	This release includes C API changes that are not backwards compatible.

	Added the baton-put command-line program.

	Added baton-do command-line program.

	Added new move and checksum operations.

	Deprecated baton-metasuper program.

	Use FindBin in baton wrapper script.

	[0.17.1]

	Relink with iRODS 4.1.10.

	Use disposable-irods 1.2.

	[0.17.0]

	Bugfix: Check for errors when closing data objects.

	Added --version CLI argument to baton Perl script.

	Allow baton to report the location of files in compound resources.

	[0.16.4]

	Bugfix: an incorrect error code could be returned in JSON
	responses.

	Bugfix: the root collection '/' was incorrectly identified as
	a relative path.

	[0.16.3]

	Added support for user#zone syntax in permissions.

	Added baton-specificquery program (contributed by Joshua
	C. Randall <jcrandall@alum.mit.edu>).

	Added new autoconf macro ax_with_irods.

	Test on iRODS 4.1.8.

	[0.16.2]

	Bugfix: handle replicates that have no checksum.

	[0.16.1]

	Bugfix: search operators "n>=", "n<=" were not being accepted by
	user input validation.

	[0.16.0]

	Bugfix: baton-metamod was missing its --unsafe CLI option.

	Now reports data object resource and location for replicates when
	the --replicate option is used.

	Improved error messages.

	[0.15.0]

	Added a --checksum option to the CLI of baton-list and
	baton-metaquery which allows data object checksums to be reported.

	Added reporting of a user's or group's zone to results obtained
	when querying permissions.

	Support for iRODS 4.0.x discontinued.

	[0.14.0]

	Bugfix: fixed queries on ACLs across zones returning no results.

	Added support for iRODS 4.1.x. Support for 4.0.x is temporarily
	suspended until after the release of iRODS 4.1.0.

	Added a safe mode requiring the use of absolute iRODS paths. This
	is the default and may be disabled by using the --unsafe command
	line argument.

	Added a convenience Perl script 'baton' to generate baton-format
	JSON for input to the C programs (as an alternative to using
	'jq').

	Added libtool version information to the shared library.

	[0.13.0]

	Queries for timestamps and no longer limited to replicate '0'' and
	timestamps for all replicates are reported, rather than just the
	most recent.

	[0.12.0]

	Added support for the 'NOT LIKE' and 'IN' query
	operators. Contribution from Joshua Randall.

	Added --with-irods=/path/to/irods option to the configure script.

	[0.11.1]

	Added a --buffer-size option to baton-get. This enables the data
	transfer buffer size to be set by the user.

	[0.11.0]

	Added baton-get program to allow data to be downloaded as files
	or inline JSON.
